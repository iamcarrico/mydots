# Create a new directory and enter it
function mkd() {
  mkdir -p "$@" && cd "$@"
}

# Determine size of a file or total size of a directory
function fs() {
  if du -b /dev/null > /dev/null 2>&1; then
    local arg=-sbh
  else
    local arg=-sh
  fi
  if [[ -n "$@" ]]; then
    du $arg -- "$@"
  else
    du $arg .[^.]* *
  fi
}

# create gif from gifshots folder
function mkgif(){
  rm -rf /tmp/.gitshots
  if [ $# -eq 0 ]; then
    echo "supply a date range and a file name"
  else
    mkdir /tmp/.gitshots
    find ~/.gitshots/*.jpg -type f -ctime -$1 | xargs -I{} cp "{}" /tmp/.gitshots
    mogrify -resize 320x240 /tmp/.gitshots/*.jpg
    convert -delay 18 -loop 0 /tmp/.gitshots/*.jpg ~/desktop/$2.gif
    rm -rf /tmp/.gitshots
    upgif ~/desktop/$2.gif $2.gif
  fi
}

# upload a gif to s3
function upgif(){
  s3cmd put $1 s3://$S3BIN/images/gifs/$2 && echo -e $GREEN2"Uploaded. http://$S3BIN/images/gifs/$2"$RESET
  dt=`date +%s`
  curl -d '{"date" : "'"$dt"'" , "file_name"  :"'"http://$S3BIN/images/gifs/$2"'", "key" : "'"$HEROKUKEY"'"}' -H 'content-type:application/json' $HEROKUAPP$HEROKUTABLE
}

# make a dance gif and upload it to s3
function mkdancegif(){
  fn=`uuidgen`
  rm -rf /tmp/.dancegif
  if [ $# -eq 0 ]; then
    echo "supply a the number of frames you want"
  else
    mkdir /tmp/.dancegif
    for i in `seq 1 $1`;
    do
      imagesnap -q /tmp/.dancegif/$i.jpg
    done
    mogrify -resize 320x240 /tmp/.dancegif/*.jpg
    convert -delay 12 -loop 0 /tmp/.dancegif/*.jpg $HOME/Desktop/$fn.gif
    upgif $HOME/Desktop/$fn.gif $fn.gif
  fi
}
